{"version":3,"sources":["webpack:///./src/views/demo/demo.vue?4bee","webpack:///src/views/demo/demo.vue","webpack:///./src/views/demo/demo.vue?3ff6","webpack:///./src/views/demo/demo.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticStyle","attrs","on","clickBtn","_v","staticRenderFns","name","methods","mounted","createMap","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,CAAC,OAAS,SAASC,MAAM,CAAC,GAAK,SAASH,EAAG,SAAS,CAACI,GAAG,CAAC,MAAQR,EAAIS,WAAW,CAACT,EAAIU,GAAG,SAAS,IAC7NC,EAAkB,G,4DCWtB,GACEC,KAAM,OACNC,QAAS,CACP,UADJ,qLAEA,eAFA,8BAGA,WAHA,cAGA,EAHA,gBAIA,eAJA,cAIA,EAJA,iBAKA,aALA,gCAMA,qBANA,gCAOA,eAPA,gCAQA,sBARA,gCASA,qBATA,gCAUA,eAVA,gCAWA,oBAXA,gCAYA,eAZA,gCAaA,oBAbA,gCAcA,iBAdA,eAcA,EAdA,OAeA,CACA,mBACA,uBACA,SACA,iBACA,UApBA,UAkFA,iBAlFA,QAkFA,EAlFA,OAmFA,SACA,eACA,uBACA,iBAGA,gBACA,YAEA,iBACA,aACA,gBACA,0BACA,OACA,2CAjGA,yGAsJI,SAtJJ,gMAuJA,oBAvJA,cAuJA,EAvJA,gBAwJA,kBAxJA,cAwJA,EAxJA,gBAyJA,uBAzJA,+BA0JA,eA1JA,gCA2JA,qBA3JA,eA2JA,EA3JA,iBA4JA,sBA5JA,QA4JA,EA5JA,OA8JA,sFAEA,QAEA,0BAMA,GACA,UACA,2BAEA,eACA,iCACA,+BACA,iDACA,eACA,OACA,mBACA,oBACA,SACA,iBACA,UAGA,oCAIA,OAHA,WAEA,kEACA,KAEA,QACA,aACA,mBAjMA,0GAuMEC,QAzMF,WA0MIb,KAAKc,cCtNwb,I,YCO7bC,EAAY,eACd,EACAjB,EACAY,GACA,EACA,KACA,WACA,MAIa,aAAAK,E","file":"js/chunk-2d0b309e.c799548f.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"height\":\"500px\"},attrs:{\"id\":\"map\"}}),_c('Button',{on:{\"click\":_vm.clickBtn}},[_vm._v(\"按钮\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div style=\"height: 500px\" id=\"map\">\r\n    </div>\r\n    <Button @click=\"clickBtn\">按钮</Button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport config from '../../setting/mapConfig'\r\nimport arcgisPackage from '../../utils/arcgisTools'\r\nimport { tdtlayer } from '@/utils/layers'\r\nexport default {\r\n  name: 'demo',\r\n  methods: {\r\n    async createMap () {\r\n      let MapView = await arcgisPackage.MapView\r\n      let Map = await arcgisPackage.Map\r\n      let Basemap = await arcgisPackage.Basemap\r\n      let Point = await arcgisPackage.Point\r\n      let BaseTileLayer = await arcgisPackage.BaseTileLayer\r\n      let Request = await arcgisPackage.Request\r\n      let geometryEngine = await arcgisPackage.geometryEngine\r\n      let GraphicLayer = await arcgisPackage.GraphicsLayer\r\n      let Graphic = await arcgisPackage.Graphic\r\n      let FeatureLayer = await arcgisPackage.FeatureLayer\r\n      let Polygon = await arcgisPackage.Polygon\r\n      let WebTileLayer = await arcgisPackage.WebTileLayer\r\n      let SceneView = await arcgisPackage.SceneView\r\n      let polySym = {\r\n        type: 'simple-fill', // autocasts as new SimpleFillSymbol()\r\n        color: [140, 140, 222, 0.5],\r\n        outline: {\r\n          color: [0, 0, 0, 0.5],\r\n          width: 2\r\n        }\r\n      }\r\n\r\n      /* this.layerRedLine = new FeatureLayer({\r\n        url: config.serverUrl + '/arcgis/rest/services/qhhx/hongxian/MapServer',\r\n        opacity: 0.7,\r\n        outFields: ['*'],\r\n        popupTemplate: {\r\n          title: '{name}',\r\n          content: [\r\n            {\r\n              type: 'fields',\r\n              fieldInfos: [{\r\n                fieldName: 'STATENAME',\r\n                label: '所属地区'\r\n              }, {\r\n                fieldName: '面积',\r\n                label: '面积（平方米）'\r\n              }]\r\n            }\r\n          ]\r\n        }\r\n      }) */\r\n\r\n      // 天地图影像地图\r\n      /* let TDT = BaseTileLayer.createSubclass({\r\n        properties: {\r\n          urlTemplate: null\r\n        },\r\n        getTileUrl: function (level, row, col) {\r\n          let url = 'http://t' + col % 8 + '.tianditu.gov.cn/DataServer?T=img_w&tk=12b886b3d0f324bd6032c29503972e7c&x=' + col + '&y=' + row + '&l=' + level\r\n          // var url = \"http://t0.tianditu.gov.cn/cva_w/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=img&STYLE=default&TILEMATRIXSET=w&FORMAT=tiles&TILEMATRIX=\"+level+\"&TILEROW=\"+row+\"&TILECOL=\"+col+\"&tk=12b886b3d0f324bd6032c29503972e7c\";\r\n          return url\r\n        },\r\n        fetchTile: function (level, row, col) {\r\n          let url = this.getTileUrl(level, row, col)\r\n          return Request(url, {\r\n            responseType: 'image'\r\n          })\r\n            .then((response) => {\r\n              let image = response.data\r\n              let width = this.tileInfo.size[0]\r\n              let height = this.tileInfo.size[0]\r\n\r\n              let canvas = document.createElement('canvas')\r\n              let context = canvas.getContext('2d')\r\n              canvas.width = width\r\n              canvas.height = height\r\n\r\n              context.drawImage(image, 0, 0, width, height)\r\n\r\n              return canvas\r\n            })\r\n        }\r\n      })\r\n\r\n      let tdtylayer = new TDT() */\r\n\r\n      /* let td = new WebTileLayer({\r\n        urlTemplate: 'http://t2.tianditu.gov.cn/img_c/wmts?tk=12b886b3d0f324bd6032c29503972e7c&TILECOL={col}&TILEROW={row}&TILEMATRIX={level}&REQUEST=GetTile&VERSION=1.0.0&LAYER=img&STYLE=default&TILEMATRIXSET=c&FORMAT=tiles&SERVICE=WMTS'\r\n      }) */\r\n      let lay = await tdtlayer()\r\n      let customBasemap = new Basemap({\r\n        baseLayers: [ lay ],\r\n        title: 'Custom Basemap',\r\n        id: 'myBasemap'\r\n      })\r\n\r\n      this.map = new Map({\r\n        basemap: customBasemap\r\n      })\r\n      this.view = new SceneView({\r\n        map: this.map,\r\n        container: 'map',\r\n        center: config.centerPoint,\r\n        zoom: 7,\r\n        spatialReference: config.spatialReference\r\n      })\r\n/*      this.view.on('click', event => {\r\n        console.log(event)\r\n      })\r\n      let point = new Point({\r\n        type: 'point',\r\n        longitude: 98.880521,\r\n        latitude: 38.762178\r\n      })\r\n\r\n      let polyline = {\r\n        type: 'polyline',\r\n        paths: [\r\n          [\r\n            [98.880521, 38.762178],\r\n            [98.990521, 38.772178]\r\n          ]\r\n        ],\r\n        spatialReference: { wkid: 4326 }\r\n      }\r\n      let polygon = new Polygon({\r\n        rings: [\r\n          [\r\n            [98.880521, 38.762178],\r\n            [98.990521, 38.972178],\r\n            [98.790521, 38.672178],\r\n            [98.880521, 38.762178]\r\n          ]\r\n        ],\r\n        spatialReference: { wkid: 4326 }\r\n      })*/\r\n/*      let bufferLayer = new GraphicLayer()\r\n      this.buffer = geometryEngine.geodesicBuffer(polygon, 0.5, 'kilometers', false)\r\n      this.buffer = geometryEngine.union([this.buffer, polygon])\r\n      // console.log(this.buffer.rings[1])\r\n      this.buffer.rings.pop()\r\n      // this.buffer.removeRing(this.buffer.rings[1])\r\n      this.graphic = new Graphic({\r\n        geometry: this.buffer,\r\n        symbol: polySym\r\n      })\r\n      bufferLayer.add(this.graphic)\r\n      // this.map.add(td)\r\n      this.map.add(this.layerRedLine)\r\n      this.map.add(bufferLayer)\r\n      this.bufferLayer = bufferLayer\r\n\r\n      this.view.on('pointer-move', evt => {\r\n        point = this.view.toMap({ x: evt.x, y: evt.y })\r\n        /!* console.log(mp.x + '-' + mp.y) *!/\r\n      })*/\r\n    },\r\n    async clickBtn () {\r\n      let Geoprocessor = await arcgisPackage.Geoprocessor\r\n      let FeatureSet = await arcgisPackage.FeatureSet\r\n      let ImageParameters = await arcgisPackage.ImageParameters\r\n      let Graphic = await arcgisPackage.Graphic\r\n      let GraphicLayer = await arcgisPackage.GraphicsLayer\r\n      let geometryEngine = await arcgisPackage.geometryEngine\r\n      // let gp = new Geoprocessor('http://192.168.1.158:6080/arcgis/rest/services/qhhx/intersect/GPServer/intersect')\r\n      let gp = new Geoprocessor('http://192.168.1.158:6080/arcgis/rest/services/qhhx/insect/GPServer/insect')\r\n\r\n      let featureSet = new FeatureSet()\r\n\r\n      featureSet.features = [this.graphic]\r\n      /* let params = {\r\n        polygon: featureSet,\r\n        redline: 'wgs'\r\n      } */\r\n\r\n      let params = {\r\n        polygon: featureSet,\r\n        redline: 'redline_Project'\r\n      }\r\n      console.log(featureSet)\r\n      gp.submitJob(params).then(result => {\r\n        if (result.jobStatus === 'job-succeeded') {\r\n          gp.getResultData(result.jobId, 'out').then(res => {\r\n            console.log(res)\r\n            let polySym = {\r\n              type: 'simple-fill', // autocasts as new SimpleFillSymbol()\r\n              color: [140, 10, 2, 0.8],\r\n              outline: {\r\n                color: [0, 0, 0, 0.8],\r\n                width: 2\r\n              }\r\n            }\r\n            let graphicArr = res.value.features.map(feature => {\r\n              feature.symbol = polySym\r\n              // 计算面积\r\n              feature.attributes.shapearea = geometryEngine.geodesicArea(feature.geometry, 'square-meters')\r\n              return feature\r\n            })\r\n            let insercLayer = new GraphicLayer()\r\n            insercLayer.addMany(graphicArr)\r\n            this.map.add(insercLayer)\r\n          })\r\n        }\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n    this.createMap()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!./demo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!./demo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./demo.vue?vue&type=template&id=cb28cdc8&scoped=true&\"\nimport script from \"./demo.vue?vue&type=script&lang=js&\"\nexport * from \"./demo.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.7.1@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"cb28cdc8\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}